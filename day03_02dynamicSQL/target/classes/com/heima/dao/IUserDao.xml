<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heima.dao.IUserDao">
    <!-- 配置查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="com.heima.domain.User">
        <!-- 主键字段的对应 -->
        <id property="userId" column="id"></id>
        <!-- 主键字段的对应 -->
        <result property="userName" column="username"></result>
        <result property="userAddress" column="address"></result>
        <result property="userSex" column="sex"></result>
        <result property="userBirthday" column="birthday"></result>

    </resultMap>

    <!-- 了解的内容，抽取重复的sql语句 -->
    <sql id="defaultUser">
        select * from user
    </sql>

    <!-- mapper标签namespace属性的取值必须是dao接口的全限定类名 -->
    <!-- 配置查询所有 id要和IUserDao的方法名称一致 把结果集封装到com.heima.domain.User中 -->
    <select id="findAll" resultMap="userMap">
        <!-- select id as userId, username as userName, address as userAddress, sex as userSex, birthday as userBirthday from user; -->
        <!-- select * from user; -->
        <include refid="defaultUser"></include>
    </select>

    <select id="findById" parameterType="java.lang.Integer" resultMap="userMap">
        select * from user where id = #{uid};
    </select>

    <select id="findByUserName" parameterType="java.lang.String" resultMap="userMap">
        <!-- select * from user where username like "%${value}%"; -->
        select * from user where username like #{name};
    </select>

    <select id="findUserByVo" parameterType="com.heima.domain.QueryVo" resultMap="userMap">
        <!-- select * from user where username like "%${value}%"; -->
        select * from user where username like #{user.userName};
    </select>
    
    <select id="findUserByCondition" parameterType="com.heima.domain.User" resultMap="userMap">
        select * from user
        <!-- 加入where就不用了1=1了 -->
        <where>
            <!-- ""中的userName表示传入的参数User的userName属性 -->
            <if test="userName != null">
                and username = #{userName}
            </if>
            <if test="userSex != null ">
                and sex = #{userSex}
            </if>
        </where>

    </select>

    <!-- 根据queryvo中的id集合实现查询用户列表 -->
    <select id="findUserInIds" parameterType="com.heima.domain.QueryVo" resultMap="userMap">
        <!-- select * from user -->
        <include refid="defaultUser"></include>
        <where>
            <if test="ids != null and ids.size() > 0">
                <foreach collection="ids" open="and id in (" close=")" item="id" separator=",">
                    <!-- #{}里面填的内容和上面标签中的item值保持一致-->
                    #{id}
                </foreach>
            </if>
        </where>
    </select>
</mapper>